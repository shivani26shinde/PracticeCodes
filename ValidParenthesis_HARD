/*
Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:

1. Any left parenthesis '(' must have a corresponding right parenthesis ')'.
2. Any right parenthesis ')' must have a corresponding left parenthesis '('.
3. Left parenthesis '(' must go before the corresponding right parenthesis ')'.
4. '*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.
5. An empty string is also valid.

Input: "(*))"
Output: True
*/

class Solution {
    public boolean checkValidString(String s) {
        int min = 0, max = 0;
        
        for(int i=0;i<s.length();i++){
            char c = s.charAt(i);
            if(c == '(') min++;
            else min--;
            
            if(c != ')') max++;
            else max--;
            
            if(max<0) return false;
            
            min = Math.max(0,min);
        }
        
        return min==0;
    }
}
