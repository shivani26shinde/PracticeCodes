/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        int maxLevel = 0;
        int currentLevel = 0;
        int max = Integer.MIN_VALUE;
        int count = 1;
        
        if(root == null){
            return 0;
        }
        
        q.add(root);
        while(!q.isEmpty()){
            int sum = 0;
            int tempCount = 0;
            currentLevel++;
            for(int i=0;i<count;i++){
                TreeNode node = q.remove();
                sum = sum + node.val;
                if(node.left != null){
                    q.add(node.left);
                    tempCount++;
                }
                if(node.right != null){
                    q.add(node.right);
                    tempCount++;
                }
            }
            if(sum > max){
                max = sum;
                maxLevel = currentLevel;
            }
            count = tempCount;
        }
        return maxLevel;
    }
}
