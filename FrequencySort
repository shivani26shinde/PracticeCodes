class Solution {
    public String frequencySort(String s) {
        if(s==null || s.length()==0) return "";
        
        PriorityQueue<Map.Entry<Character, Integer>> pq = new PriorityQueue<>(
            new Comparator<Map.Entry<Character, Integer>>(){
                public int compare(Map.Entry<Character, Integer> e1, Map.Entry<Character, Integer> e2){
                    return e2.getValue()-e1.getValue();
                }
            }
        );
        
        Map<Character, Integer> map = new HashMap<>();
        
        for(char c : s.toCharArray()){
            map.put(c, map.getOrDefault(c, 0)+1);
        }
        
        pq.addAll(map.entrySet());
        
        StringBuilder sb = new StringBuilder();
        
        while(!pq.isEmpty()){
            Map.Entry<Character,Integer> e = pq.poll();
            for(int i=0;i<e.getValue();i++)
                sb.append(e.getKey());
        }
        
        return sb.toString();
    }
}
