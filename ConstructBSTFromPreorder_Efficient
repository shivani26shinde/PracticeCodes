/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    TreeNode root = null;
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode root = null;
        if(preorder.length==0) return root;
        
        Stack<TreeNode> st = new Stack<>();
        root = new TreeNode(preorder[0]);
        st.push(root);
        
        for(int i=1;i<preorder.length;i++){
            TreeNode temp = null;
            
            while(!st.isEmpty() && preorder[i]>st.peek().val){
                temp = st.pop();
            }
            
            if(temp!=null){
                temp.right = new TreeNode(preorder[i]);
                st.push(temp.right);
            } else{
                temp = st.peek();
                temp.left = new TreeNode(preorder[i]);
                st.push(temp.left);
            }
        }
        return root;
    }
}
