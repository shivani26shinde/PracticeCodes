class Trie {

    /** Initialize your data structure here. */
    Node root;
    public Trie() {
        root=new Node();
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        Node node=root;
        for(char ch: word.toCharArray()){
            if(node.children[ch-'a']==null)
                node.children[ch-'a'] = new Node();
            node=node.children[ch-'a'];
        }
        node.isEnd=true;
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
        Node node=root;
        for(char ch: word.toCharArray()){
            if(node.children[ch-'a']==null)
                return false;
            node=node.children[ch-'a'];
        }
        if(node.isEnd) return true;
        return false;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
        Node node=root;
        for(char ch: prefix.toCharArray()){
            if(node.children[ch-'a']==null)
                return false;
            node=node.children[ch-'a'];
        }
        return true;
    }
}
class Node{
    Node[] children = new Node[26];
    boolean isEnd=false;
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */
